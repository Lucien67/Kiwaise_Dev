{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Projet Git\\\\PlatsDuJour\\\\platsDuJour\\\\src\\\\pages\\\\restaurant-edit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loader from '../components/loader';\nimport RestaurantForm from '../components/restaurant-form';\n//import POKEMONS from '../models/mock-pokemon';\nimport RestaurantService from '../services/restaurant-service'; // On declare un type pour uen props nommé \"id\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// on passe la Props au compsant \"params\"\nconst RestaurantEdit = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  // on charge le bon pokemon par rapport ç l'idantifiant de l'url\n  const [restaurant, setRestaurant] = useState(null); // on fait la recherche  \n\n  useEffect(() => {\n    RestaurantService.getRestaurant(+match.params.id).then(restaurant => setRestaurant(restaurant));\n    /*fetch(`http://localhost:3001/pokemons/${match.params.id}`)\r\n    .then(response => response.json())\r\n    .then(pokemon => {\r\n      if(pokemon.id) setPokemon(pokemon);\r\n    })*/\n\n    /*POKEMONS.forEach(pokemon => {\r\n      if (match.params.id === pokemon.id.toString()) {\r\n        setPokemon(pokemon);\r\n      }\r\n    })*/\n  }, [match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: restaurant ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header center\",\n        children: [\"\\xC9diter \", restaurant.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantForm, {\n        restaurant: restaurant,\n        isEditForm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // si il y a une erreur\n    _jsxDEV(\"h4\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantEdit, \"xTHIp85kevrNjFQ3g5ZiTLKWCkg=\");\n\n_c = RestaurantEdit;\nexport default RestaurantEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantEdit\");","map":{"version":3,"sources":["D:/_Projet Git/PlatsDuJour/platsDuJour/src/pages/restaurant-edit.tsx"],"names":["React","useState","useEffect","Loader","RestaurantForm","RestaurantService","RestaurantEdit","match","restaurant","setRestaurant","getRestaurant","params","id","then","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,EAA6CC,SAA7C,QAA8D,OAA9D;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA;AACA,OAAOC,iBAAP,MAA8B,gCAA9B,C,CAGA;;;;AAGA;AACA,MAAMC,cAA8D,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEpF;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAkB,IAAlB,CAA5C,CAHoF,CAKpF;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB,CAACK,aAAlB,CAAgC,CAACH,KAAK,CAACI,MAAN,CAAaC,EAA9C,EAAkDC,IAAlD,CAAuDL,UAAU,IAAIC,aAAa,CAACD,UAAD,CAAlF;AAGA;AACJ;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACG,GAhBQ,EAgBN,CAACD,KAAK,CAACI,MAAN,CAAaC,EAAd,CAhBM,CAAT;AAkBA,sBACE;AAAA,cACIJ,UAAU,gBACV;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,iCAAuCA,UAAU,CAACM,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEN,UAA5B;AAAwC,QAAA,UAAU,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA;AAMR;AACF;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,6BAAuB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArCD;;GAAMF,c;;KAAAA,c;AAuCN,eAAeA,cAAf","sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Loader from '../components/loader';\r\nimport RestaurantForm from '../components/restaurant-form';\r\nimport Restaurant from '../models/restaurant';\r\n//import POKEMONS from '../models/mock-pokemon';\r\nimport RestaurantService from '../services/restaurant-service';\r\n \r\n\r\n// On declare un type pour uen props nommé \"id\"\r\ntype Params = { id: string };\r\n  \r\n// on passe la Props au compsant \"params\"\r\nconst RestaurantEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  // on charge le bon pokemon par rapport ç l'idantifiant de l'url\r\n  const [restaurant, setRestaurant] = useState<Restaurant|null>(null);\r\n  \r\n  // on fait la recherche  \r\n  useEffect(() => {\r\n    RestaurantService.getRestaurant(+match.params.id).then(restaurant => setRestaurant(restaurant));\r\n    \r\n    \r\n    /*fetch(`http://localhost:3001/pokemons/${match.params.id}`)\r\n    .then(response => response.json())\r\n    .then(pokemon => {\r\n      if(pokemon.id) setPokemon(pokemon);\r\n    })*/\r\n\r\n\r\n    /*POKEMONS.forEach(pokemon => {\r\n      if (match.params.id === pokemon.id.toString()) {\r\n        setPokemon(pokemon);\r\n      }\r\n    })*/\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { restaurant ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { restaurant.name }</h2>\r\n            <RestaurantForm restaurant={restaurant} isEditForm={true}></RestaurantForm>\r\n        </div>\r\n      ) : (\r\n          // si il y a une erreur\r\n        <h4 className=\"center\"><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default RestaurantEdit;"]},"metadata":{},"sourceType":"module"}