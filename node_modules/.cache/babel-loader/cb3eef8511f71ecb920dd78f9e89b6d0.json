{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Projet Git\\\\KiwaiseDev\\\\src\\\\components\\\\restaurant-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport formatType from '../helpers/format-type';\nimport RestaurantService from '../services/restaurant-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantForm = _ref => {\n  _s();\n\n  let {\n    restaurant,\n    isEditForm\n  } = _ref;\n  const history = useHistory();\n  const [form, setForm] = useState({\n    picture: {\n      value: restaurant.picture\n    },\n    name: {\n      value: restaurant.name,\n      isValid: true\n    },\n    hp: {\n      value: restaurant.hp,\n      isValid: true\n    },\n    cp: {\n      value: restaurant.cp,\n      isValid: true\n    },\n    types: {\n      value: restaurant.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  }; // permet de recupérer les modification apporté au formulaire\n\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const validateForm = () => {\n    let newForm = form; // Validator url\n\n    if (isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg = 'L\\'url n\\'est pas valide.';\n        const newField = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      } else {\n        const newField = {\n          value: form.picture.value,\n          error: '',\n          isValid: true\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      }\n    } // Validator name\n\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du restaurant est requis (1-25).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } // Validator hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } // Validator cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = type => {\n    // empêchge l'user de déselectionné la case \"1 minimum\"\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    } // permet de selectionner maximum 3 cases, mais peux déselectionner les types déjà présent, pour pouvoir modif un pokémon\n    // hasType pour vérifier si on vérouille pas une case déjà cocher par l'user\n\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true; // pour vérouiller les cases à cocher de la liste, il faut lié le résultat de la méthode \"isTypesValid\" à la propriété \"Disabled\", qui permet de vérouiller le champs\n  };\n  /*const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    // permet de bloqué le comportement natif du formulaire, afin de l'envoyé nous meme\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n      if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      \r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n    console.log(form);\r\n    // on redirige la page sur la page détail\r\n    //history.push(`/pokemons/${pokemon.id}`)\r\n  }*/\n\n\n  const handleSubmit = e => {\n    // permet de bloqué le comportement natif du formulaire, afin de l'envoyé nous meme\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      restaurant.picture = form.picture.value;\n      restaurant.name = form.name.value;\n      restaurant.hp = form.hp.value;\n      restaurant.cp = form.cp.value;\n      restaurant.types = form.types.value;\n      isEditForm ? updateRestaurant() : addRestaurant();\n    }\n  };\n\n  const deleteRestaurant = () => {\n    RestaurantService.deleteRestaurant(restaurant).then(() => history.push(\"/restaurants\"));\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const addRestaurant = () => {\n    RestaurantService.addRestaurant(restaurant).then(() => history.push(\"/restaurants\"));\n  };\n\n  const updateRestaurant = () => {\n    RestaurantService.updateRestaurant(restaurant).then(() => history.push(\"/restaurants/\".concat(restaurant.id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [isEditForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: restaurant.picture,\n              alt: restaurant.name,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn-floating halfway-fab waves-effect waves-light\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: deleteRestaurant,\n                className: \"material-icons\",\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [isAddForm() && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"picture\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.picture.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), form.picture.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.picture.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.name.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), form.name.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.name.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Point de vie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"hp\",\n                  name: \"hp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.hp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), form.hp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.hp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cp\",\n                  children: \"D\\xE9g\\xE2ts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"cp\",\n                  name: \"cp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.cp.value,\n                  onChange: e => handleInputChange(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), form.cp.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-panel red accent-1\",\n                  children: form.cp.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: type,\n                      disabled: !isTypesValid(type),\n                      checked: hasType(type),\n                      onChange: e => selectType(type, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantForm, \"gHeFLoFPUxe32jJ7vuGsXyKbqmo=\", false, function () {\n  return [useHistory];\n});\n\n_c = RestaurantForm;\nexport default RestaurantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantForm\");","map":{"version":3,"sources":["D:/_Projet Git/KiwaiseDev/src/components/restaurant-form.tsx"],"names":["React","useState","useHistory","formatType","RestaurantService","RestaurantForm","restaurant","isEditForm","history","form","setForm","picture","value","name","isValid","hp","cp","types","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","validateForm","newForm","isAddForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypesValid","length","handleSubmit","preventDefault","isFormValid","updateRestaurant","addRestaurant","deleteRestaurant","then","push","id","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Restaurant from '../models/restaurant';\r\nimport formatType from '../helpers/format-type';\r\nimport RestaurantService from '../services/restaurant-service';\r\n  \r\ntype Props = {\r\n  restaurant: Restaurant,\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n  };\r\n\r\n  type Form = {\r\n    picture: Field,\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n  }\r\n  \r\nconst RestaurantForm: FunctionComponent<Props> = ({restaurant, isEditForm}) => {\r\n  \r\n  const history = useHistory();\r\n  \r\n    const [form, setForm] = useState<Form>({\r\n        picture: {value: restaurant.picture},\r\n        name: { value: restaurant.name, isValid: true },\r\n        hp: { value: restaurant.hp, isValid: true },\r\n        cp: { value: restaurant.cp, isValid: true },\r\n        types: { value: restaurant.types, isValid: true }\r\n      });\r\n\r\n     \r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n   \r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  // permet de recupérer les modification apporté au formulaire\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if(checked) {\r\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField }});\r\n  }\r\n\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator url\r\n    if(isAddForm()) {\r\n\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du restaurant est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n  const isTypesValid = (type: string): boolean => {\r\n      // empêchge l'user de déselectionné la case \"1 minimum\"\r\n      if(form.types.value.length === 1 && hasType(type)) {\r\n          return false;\r\n      }\r\n      // permet de selectionner maximum 3 cases, mais peux déselectionner les types déjà présent, pour pouvoir modif un pokémon\r\n      // hasType pour vérifier si on vérouille pas une case déjà cocher par l'user\r\n      if(form.types.value.length >= 3 && !hasType(type)) {\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n      // pour vérouiller les cases à cocher de la liste, il faut lié le résultat de la méthode \"isTypesValid\" à la propriété \"Disabled\", qui permet de vérouiller le champs\r\n  }\r\n\r\n  /*const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    // permet de bloqué le comportement natif du formulaire, afin de l'envoyé nous meme\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      \r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n    console.log(form);\r\n    // on redirige la page sur la page détail\r\n    //history.push(`/pokemons/${pokemon.id}`)\r\n  }*/\r\n\r\n  \r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    // permet de bloqué le comportement natif du formulaire, afin de l'envoyé nous meme\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      restaurant.picture = form.picture.value;\r\n      restaurant.name = form.name.value;\r\n      restaurant.hp = form.hp.value;\r\n      restaurant.cp = form.cp.value;\r\n      restaurant.types = form.types.value;\r\n\r\n      isEditForm ? updateRestaurant() : addRestaurant();\r\n    }\r\n  }\r\n\r\n  const deleteRestaurant = () => {\r\n    RestaurantService.deleteRestaurant(restaurant).then(() => history.push(`/restaurants`));\r\n  }\r\n\r\n  const isAddForm = (): boolean => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const addRestaurant = () => {\r\n    RestaurantService.addRestaurant(restaurant).then(() => history.push(`/restaurants`));\r\n  }\r\n\r\n  const updateRestaurant = () => {\r\n    RestaurantService.updateRestaurant(restaurant).then(() => history.push(`/restaurants/${restaurant.id}`));\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n          {isEditForm && (\r\n            <div className=\"card-image\">\r\n              <img src={restaurant.picture} alt={restaurant.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deleteRestaurant} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n          )}\r\n            \r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* restaurant Picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Image</label>\r\n                  <input id=\"name\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)} ></input>\r\n                  {form.picture.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                      {form.picture.error}\r\n                  </div> }\r\n                </div>\r\n                )}\r\n\r\n                {/* restaurant name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)} ></input>\r\n                  {form.name.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                  </div> }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                  </div> }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                  </div> }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                          {/* Si le type n'est pas valide, on vérouille les cases à cocher \"!isTypesValid(type)\" */}\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e =>selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default RestaurantForm;"]},"metadata":{},"sourceType":"module"}