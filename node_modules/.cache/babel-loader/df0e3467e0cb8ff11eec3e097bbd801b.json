{"ast":null,"code":"var _jsxFileName = \"D:\\\\_Projet Git\\\\PlatsDuJour\\\\platsDuJour\\\\src\\\\PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const isAuthenticated = AuthenticationService.isAuthenticated;\n\n      if (!isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/_Projet Git/PlatsDuJour/platsDuJour/src/PrivateRoute.tsx"],"names":["React","Route","Redirect","AuthenticationService","PrivateRoute","component","Component","rest","props","isAuthenticated","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD;AAAA,sBACnB,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IAAW;AAClC,YAAMC,eAAe,GAAGN,qBAAqB,CAACM,eAA9C;;AACA,UAAI,CAACA,eAAL,EAAsB;AACpB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,0BAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAPD;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,CAArB;;KAAMJ,Y;AAWN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}